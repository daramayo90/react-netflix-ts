{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damia\\\\OneDrive\\\\Escritorio\\\\1. Dami\\xE1n\\\\Estudio\\\\Programaci\\xF3n\\\\Web\\\\4. Personal\\\\Proyectos\\\\prueba\\\\frontend\\\\src\\\\context\\\\authContext\\\\AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport AuthReducer from \"./AuthReducer\";\nimport { createContext, useEffect, useReducer } from \"react\"; //The initial State should have the user at the moment of the login\n//If there is no user, the value it's null (firts login)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  isFetching: false,\n  error: false,\n  dispatch\n};\nexport const AuthContext = /*#__PURE__*/createContext(INITIAL_STATE);\n_c = AuthContext;\nexport const AuthContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE); //Save credentials in Local Storage\n\n  useEffect(() => {\n    localStorage.setItem('user', JSON.stringify(state.user));\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n\n_c2 = AuthContextProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthContext\");\n$RefreshReg$(_c2, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/damia/OneDrive/Escritorio/1. Damián/Estudio/Programación/Web/4. Personal/Proyectos/prueba/frontend/src/context/authContext/AuthContext.jsx"],"names":["AuthReducer","createContext","useEffect","useReducer","INITIAL_STATE","user","JSON","parse","localStorage","getItem","isFetching","error","dispatch","AuthContext","AuthContextProvider","children","state","setItem","stringify"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD,C,CAEA;AACA;;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,IAD9B;AAEpBC,EAAAA,UAAU,EAAE,KAFQ;AAGpBC,EAAAA,KAAK,EAAE,KAHa;AAIpBC,EAAAA;AAJoB,CAAtB;AAOA,OAAO,MAAMC,WAAW,gBAAGZ,aAAa,CAACG,aAAD,CAAjC;KAAMS,W;AAEb,OAAO,MAAMC,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACnD,QAAM,CAACC,KAAD,EAAQJ,QAAR,IAAoBT,UAAU,CAACH,WAAD,EAAcI,aAAd,CAApC,CADmD,CAGnD;;AACAF,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAeF,KAAK,CAACX,IAArB,CAA7B;AACD,GAFQ,EAEN,CAACW,KAAK,CAACX,IAAP,CAFM,CAAT;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,IAAI,EAAEW,KAAK,CAACX,IADP;AAELK,MAAAA,UAAU,EAAEM,KAAK,CAACN,UAFb;AAGLC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAHR;AAILC,MAAAA;AAJK,KADT;AAAA,cAQGG;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApBM;;GAAMD,mB;;MAAAA,mB","sourcesContent":["import AuthReducer from \"./AuthReducer\";\r\nimport { createContext, useEffect, useReducer } from \"react\";\r\n\r\n//The initial State should have the user at the moment of the login\r\n//If there is no user, the value it's null (firts login)\r\nconst INITIAL_STATE = {\r\n  user: JSON.parse(localStorage.getItem('user')) || null,\r\n  isFetching: false,\r\n  error: false,\r\n  dispatch\r\n};\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE);\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n\r\n  //Save credentials in Local Storage\r\n  useEffect(() => {\r\n    localStorage.setItem('user', JSON.stringify(state.user));\r\n  }, [state.user]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        isFetching: state.isFetching,\r\n        error: state.error,\r\n        dispatch\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}