{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damia\\\\OneDrive\\\\Escritorio\\\\1. Dami\\xE1n\\\\Estudio\\\\Programaci\\xF3n\\\\Web\\\\4. Personal\\\\Proyectos\\\\prueba\\\\frontend\\\\src\\\\auth\\\\AuthProvider.js\",\n    _s = $RefreshSig$();\n\n//Componente global que envuelve App desde Index\n//Luego, el Context.Provider es el que el envía la información a los children\nimport axios from 'axios';\nimport { createContext, useState, useEffect } from 'react'; //The initial State should have the user at the moment of the login\n//If there is no user, the value it's null (firts login)\n// Se exporta para que archivos externos puedan consumir dicho contexto\n// Exportamos la instancia del objecto Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(); // Creamos un componente Provider el cual recibe como props los children\n\nexport default function AuthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null); //El contextValue es el valor enviado a los hijos (children)\n  //En este caso, contextValue tiene un objeto llamado \"user\"\n  //Se crea el AuthContext y PROVEE el valor contextValue\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/damia/OneDrive/Escritorio/1. Damián/Estudio/Programación/Web/4. Personal/Proyectos/prueba/frontend/src/auth/AuthProvider.js"],"names":["axios","createContext","useState","useEffect","AuthContext","AuthProvider","children","user","setUser","contextValue"],"mappings":";;;AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD,C,CAEA;AACA;AAEA;AACA;;;AACA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC,C,CAGP;;AACA,eAAe,SAASI,YAAT,OAAoC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC,CAD+C,CAG/C;AACA;AACA;;AACA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO,YAA7B;AAAA,cACKH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAXuBD,Y;;KAAAA,Y","sourcesContent":["//Componente global que envuelve App desde Index\r\n//Luego, el Context.Provider es el que el envía la información a los children\r\n\r\nimport axios from 'axios';\r\nimport { createContext, useState, useEffect } from 'react';\r\n\r\n//The initial State should have the user at the moment of the login\r\n//If there is no user, the value it's null (firts login)\r\n\r\n// Se exporta para que archivos externos puedan consumir dicho contexto\r\n// Exportamos la instancia del objecto Context\r\nexport const AuthContext = createContext();\r\n\r\n\r\n// Creamos un componente Provider el cual recibe como props los children\r\nexport default function AuthProvider({ children }) {\r\n    const [user, setUser] = useState(null);\r\n\r\n    //El contextValue es el valor enviado a los hijos (children)\r\n    //En este caso, contextValue tiene un objeto llamado \"user\"\r\n    //Se crea el AuthContext y PROVEE el valor contextValue\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}