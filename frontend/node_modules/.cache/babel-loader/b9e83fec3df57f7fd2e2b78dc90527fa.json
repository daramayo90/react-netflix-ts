{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damia\\\\OneDrive\\\\Escritorio\\\\1. Dami\\xE1n\\\\Estudio\\\\Programaci\\xF3n\\\\Web\\\\4. Personal\\\\Proyectos\\\\prueba\\\\frontend\\\\src\\\\auth\\\\AuthProvider.js\",\n    _s = $RefreshSig$();\n\n//Componente global que envuelve App desde Index\nimport { createContext, useState } from 'react'; // Se exporta para que archivos externos puedan consumir dicho contexto\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport default function AuthProvider() {\n  _s();\n\n  const [user, setUser] = useState(null); //Información que se quiere transmitir a los componentes hijos\n  //Todo debería estar memorizado\n\n  contextValue = {\n    user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/damia/OneDrive/Escritorio/1. Damián/Estudio/Programación/Web/4. Personal/Proyectos/prueba/frontend/src/auth/AuthProvider.js"],"names":["createContext","useState","AuthContext","AuthProvider","user","setUser","contextValue"],"mappings":";;;AAAA;AAEA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC,C,CAEA;;;AACA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEP,eAAe,SAASG,YAAT,GAAwB;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC,CADmC,CAGnC;AACA;;AACAK,EAAAA,YAAY,GAAG;AACXF,IAAAA;AADW,GAAf;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAduBH,Y;;KAAAA,Y","sourcesContent":["//Componente global que envuelve App desde Index\r\n\r\nimport { createContext, useState } from 'react';\r\n\r\n// Se exporta para que archivos externos puedan consumir dicho contexto\r\nexport const AuthContext = createContext();\r\n\r\nexport default function AuthProvider() {\r\n    const [user, setUser] = useState(null);\r\n\r\n    //Información que se quiere transmitir a los componentes hijos\r\n    //Todo debería estar memorizado\r\n    contextValue = {\r\n        user\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}